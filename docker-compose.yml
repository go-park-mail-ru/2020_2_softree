version: "3.8"
services:
  canal:
    build:
      context: .
      dockerfile: ./canal/Dockerfile
    ports:
      - 127.0.0.1:8000:8000
    volumes:
      - ./canal/canal.yml:/etc/moneycat/canal.yml
    command: ["-c", "/etc/moneycat/canal.yml"]
    depends_on:
      - profile
      - authorization
      - currency

  profile:
    build:
      context: .
      dockerfile: ./profile/Dockerfile
    volumes:
      - ./profile/profile.yml:/etc/moneycat/profile.yml
    command: ["-c", "/etc/moneycat/profile.yml"]
    depends_on:
      - postgres

  authorization:
    build:
      context: .
      dockerfile: ./authorization/Dockerfile
    volumes:
      - ./authorization/authorization.yml:/etc/moneycat/authorization.yml
    command: ["-c", "/etc/moneycat/authorization.yml"]
    depends_on:
      - redis

  currency:
    build:
      context: .
      dockerfile: ./currency/Dockerfile
    volumes:
      - ./currency/currency.yml:/etc/moneycat/currency.yml
    command: ["-c", "/etc/moneycat/currency.yml"]
    depends_on:
      - postgres

  grafana:
    image: grafana/grafana
    user: "1000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=secure_pass
    volumes:
      - ./grafana_db:/var/lib/grafana
    depends_on:
      - prometheus
    ports:
      - '127.0.0.1:3000:3000'

  prometheus:
    image: prom/prometheus
    ports:
      - "127.0.0.1:9090:9090"

  cadvisor:
    image: google/cadvisor:latest
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro

  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"

  postgres:
    build:
      context: postgres
    environment:
      - POSTGRES_MULTIPLE_DATABASES=profile,profile,123:currency,currency,123
      - POSTGRES_PASSWORD=password
    volumes:
      - ./postgres/backups:/backups

  redis:
    image: redis:alpine
