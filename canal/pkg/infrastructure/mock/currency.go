// Code generated by MockGen. DO NOT EDIT.
// Source: currency.go

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	http "net/http"
	reflect "reflect"
	entity "server/canal/pkg/domain/entity"
)

// MockCurrencyLogic is a mock of CurrencyLogic interface
type MockCurrencyLogic struct {
	ctrl     *gomock.Controller
	recorder *MockCurrencyLogicMockRecorder
}

// MockCurrencyLogicMockRecorder is the mock recorder for MockCurrencyLogic
type MockCurrencyLogicMockRecorder struct {
	mock *MockCurrencyLogic
}

// NewMockCurrencyLogic creates a new mock instance
func NewMockCurrencyLogic(ctrl *gomock.Controller) *MockCurrencyLogic {
	mock := &MockCurrencyLogic{ctrl: ctrl}
	mock.recorder = &MockCurrencyLogicMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCurrencyLogic) EXPECT() *MockCurrencyLogicMockRecorder {
	return m.recorder
}

// GetAllLatestCurrencies mocks base method
func (m *MockCurrencyLogic) GetAllLatestCurrencies(r *http.Request) (entity.Description, entity.Currencies, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllLatestCurrencies", r)
	ret0, _ := ret[0].(entity.Description)
	ret1, _ := ret[1].(entity.Currencies)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetAllLatestCurrencies indicates an expected call of GetAllLatestCurrencies
func (mr *MockCurrencyLogicMockRecorder) GetAllLatestCurrencies(r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllLatestCurrencies", reflect.TypeOf((*MockCurrencyLogic)(nil).GetAllLatestCurrencies), r)
}

// GetURLCurrencies mocks base method
func (m *MockCurrencyLogic) GetURLCurrencies(r *http.Request) (entity.Description, entity.Currencies, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetURLCurrencies", r)
	ret0, _ := ret[0].(entity.Description)
	ret1, _ := ret[1].(entity.Currencies)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetURLCurrencies indicates an expected call of GetURLCurrencies
func (mr *MockCurrencyLogicMockRecorder) GetURLCurrencies(r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetURLCurrencies", reflect.TypeOf((*MockCurrencyLogic)(nil).GetURLCurrencies), r)
}

// GetMarkets mocks base method
func (m *MockCurrencyLogic) GetMarkets() (entity.Description, entity.Markets, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMarkets")
	ret0, _ := ret[0].(entity.Description)
	ret1, _ := ret[1].(entity.Markets)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetMarkets indicates an expected call of GetMarkets
func (mr *MockCurrencyLogicMockRecorder) GetMarkets() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMarkets", reflect.TypeOf((*MockCurrencyLogic)(nil).GetMarkets))
}
